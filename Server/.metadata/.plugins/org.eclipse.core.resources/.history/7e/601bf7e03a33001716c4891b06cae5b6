package Servlet;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.sql.DataSource;

import org.json.simple.JSONObject;

@SuppressWarnings("serial")
public class ConditionServlet extends HttpServlet {
	
	private Context context;
	private DataSource dataSource;
	
		
	public void init( ServletConfig config ) throws ServletException
	{
		context = null;
		dataSource = null;
		
		try {
			context = new InitialContext();
			dataSource = (DataSource)context.lookup( "java:comp/env/jdbc/OurCompany" );			
		} catch (NamingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void destroy()
	{
		try {
			context.close();
		} catch (NamingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	
	public void doGet( HttpServletRequest request, HttpServletResponse response ) throws IOException, ServletException
	{
		request.setCharacterEncoding( "utf-8" );
		String userID = request.getParameter( "id" );
		String query  = String.format( "select"
				+ "ac.userid, ac.subname, ac.name as accountname"
				+ ", info.name as animalname, pro.serialno"
				+ ", con.avgtemp, con.avgheart, con.step, con.checktime"
				+ "from"
				+ "Account ac, AnimalInfo info, Product pro, AnimalCondition con"
				+ "where"
				+ "ac.userid like '%s'"
				+ "and ac.userid = info.userid"
				+ "and pro.serialno = info.serialno"
				+ "and pro.serialno = con.serialno;", userID );
		Connection conn = null;
		Statement stmt = null;
		
		try {
			conn = dataSource.getConnection();
			
			if( conn == null )
			{
				System.out.println( "DBConnection error" );
				return ;
			}
			stmt = conn.createStatement();
			ResultSet rs = stmt.executeQuery( query );
			if( rs.next() )
			{
				JSONObject obj = new JSONObject();
				obj.put( "usreid", rs.getString( "userid" ) );
				obj.put( "subname", rs.getString( "subname" ) );
				obj.put( "accountname", rs.getString( "accountname" ) );
				obj.put( "animalname", rs.getString( "animalname" ) );
				obj.put( "serialno", rs.getInt( "serialno" ) );
				obj.put( "avgtemp", rs.getFloat( "avgtemp" ) );
				obj.put( "avgheart", rs.getInt( "avgheart" ) );
				obj.put( "step", rs.getInt( "step" ) );
				obj.put( "checktime", rs.getDate( "checktime" ).toString() );
				
				System.out.println( obj.toJSONString() );
			}
		} 
		
		catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		finally {
			try {
				stmt.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			try {
				conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

}
